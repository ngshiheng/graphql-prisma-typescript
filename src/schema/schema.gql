# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthPayload {
  token: String!
  user: User!
}

type Mutation {
  register(password: String!, email: String!): AuthPayload!
  login(password: String!, email: String!): AuthPayload!
  updateUser(input: UserUpdateInput!, id: String!): User!
  deleteUser(id: String!): User!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String!
  endCursor: String!
}

type Query {
  user(id: String!): User!
  users(orderBy: UserOrderByInput, last: Int, first: Int, before: String, after: String, skip: Int, filter: String): UserConnection!
}

"""The user model"""
type User {
  """The unique ID of the user """
  id: ID!

  """The email of the user"""
  email: String!

  """The email of the user"""
  password: String!

  """The date which of the user is created"""
  createdAt: String!

  """The date which of the user is last updated"""
  updatedAt: String!
}

type UserConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type UserEdge {
  node: User!
  cursor: String!
}

"""Filter order by input"""
enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserUpdateInput {
  email: String!
}
